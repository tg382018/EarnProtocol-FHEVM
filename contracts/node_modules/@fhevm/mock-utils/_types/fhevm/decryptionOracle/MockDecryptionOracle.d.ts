import { ethers as EthersT } from "ethers";
import type { Coprocessor } from "../coprocessor/Coprocessor.js";
import type { DecryptionOracle } from "./DecryptionOracle.js";
export declare class MockDecryptionOracle implements DecryptionOracle {
    #private;
    static create(readonlyProvider: EthersT.Provider, params: {
        decryptionOracleContractAddress: string;
        decryptionOracleContractInterface?: EthersT.Interface;
        kmsSigners: EthersT.Signer[];
        kmsVerifierContractAddress: string;
        aclContractAddress: string;
        coprocessor: Coprocessor;
        relayerSigner: EthersT.Signer;
    }): Promise<MockDecryptionOracle>;
    createDecryptionSignatures(handlesBytes32Hex: string[], clearTextValues: (bigint | string | boolean)[], extraData: string): Promise<{
        decryptedResult: string;
        signatures: string[];
    }>;
    awaitDecryptionOracle(): Promise<void>;
}
//# sourceMappingURL=MockDecryptionOracle.d.ts.map