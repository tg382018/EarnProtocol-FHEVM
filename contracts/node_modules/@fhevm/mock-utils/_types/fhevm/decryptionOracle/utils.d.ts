import { ethers as EthersT } from "ethers";
import { BlockLogCursor } from "../../ethers/event.js";
import type { DecryptionOracleEvent, DecryptionRequestEvent } from "./DecryptionOracleEvents.js";
export declare function getDecryptionOracleEvents(decryptionOracleContractInterface: EthersT.Interface, decryptionOracleContractAddress: string, readonlyProvider: EthersT.Provider, options: {
    fromBlockNumber?: number;
    fromBlockLogIndex?: number;
    toBlockNumber?: number;
}): Promise<{
    events: DecryptionOracleEvent[];
    cursor: BlockLogCursor;
}>;
export declare function toDecryptionRequestEvent(e: DecryptionOracleEvent): DecryptionRequestEvent | null;
export declare function parseDecryptionRequestEventsFromLogs(logs: (EthersT.EventLog | EthersT.Log)[] | null | undefined): DecryptionRequestEvent[];
//# sourceMappingURL=utils.d.ts.map