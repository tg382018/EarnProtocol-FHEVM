"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.deserializeDecryptedResult = deserializeDecryptedResult;
const ethers_1 = require("ethers");
const CiphertextType = {
    0: "bool",
    2: "uint256",
    3: "uint256",
    4: "uint256",
    5: "uint256",
    6: "uint256",
    7: "address",
    8: "uint256",
};
function deserializeDecryptedResult(handles, decryptedResult) {
    let typesList = [];
    for (const handle of handles) {
        const hexPair = handle.slice(-4, -2).toLowerCase();
        const typeDiscriminant = parseInt(hexPair, 16);
        typesList.push(typeDiscriminant);
    }
    const restoredEncoded = "0x" +
        "00".repeat(32) +
        decryptedResult.slice(2) +
        "00".repeat(32);
    const abiTypes = typesList.map((t) => {
        const abiType = CiphertextType[t];
        return abiType;
    });
    const coder = new ethers_1.ethers.AbiCoder();
    const decoded = coder.decode(["uint256", ...abiTypes, "bytes[]"], restoredEncoded);
    const rawValues = decoded.slice(1, 1 + typesList.length);
    let results = {};
    handles.forEach((handle, idx) => (results[handle] = rawValues[idx]));
    return results;
}
//# sourceMappingURL=publicDecrypt.js.map