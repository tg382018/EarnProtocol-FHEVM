"use strict";
var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _DecryptionOracleEventsHandler_db, _DecryptionOracleEventsHandler_kmsVerifier, _DecryptionOracleEventsHandler_kmsSigners, _DecryptionOracleEventsHandler_relayerSigner;
Object.defineProperty(exports, "__esModule", { value: true });
exports.DecryptionOracleEventsHandler = void 0;
const ethers_1 = require("ethers");
const error_js_1 = require("../../utils/error.js");
const KMSVerifier_js_1 = require("../contracts/KMSVerifier.js");
class DecryptionOracleEventsHandler {
    constructor(db, kmsVerifier, kmsSigners, relayerSigner) {
        _DecryptionOracleEventsHandler_db.set(this, void 0);
        _DecryptionOracleEventsHandler_kmsVerifier.set(this, void 0);
        _DecryptionOracleEventsHandler_kmsSigners.set(this, void 0);
        _DecryptionOracleEventsHandler_relayerSigner.set(this, void 0);
        __classPrivateFieldSet(this, _DecryptionOracleEventsHandler_db, db, "f");
        __classPrivateFieldSet(this, _DecryptionOracleEventsHandler_kmsVerifier, kmsVerifier, "f");
        __classPrivateFieldSet(this, _DecryptionOracleEventsHandler_kmsSigners, kmsSigners, "f");
        __classPrivateFieldSet(this, _DecryptionOracleEventsHandler_relayerSigner, relayerSigner, "f");
    }
    async handleEvent(decryptionRequestEvent) {
        const clearTextsHex = [];
        const handlesBytes32Hex = [];
        for (let i = 0; i < decryptionRequestEvent.handlesBytes32Hex.length; ++i) {
            (0, error_js_1.assertFhevm)(decryptionRequestEvent.blockNumber >= __classPrivateFieldGet(this, _DecryptionOracleEventsHandler_db, "f").fromBlockNumber, `Unexpected event blockNumber: decryptionRequestEvent.blockNumber < this.#db.fromBlockNumber`);
            const entry = await __classPrivateFieldGet(this, _DecryptionOracleEventsHandler_db, "f").queryHandleBytes32(decryptionRequestEvent.handlesBytes32Hex[i]);
            (0, error_js_1.assertFhevm)(entry.clearTextHex !== "0x");
            clearTextsHex.push(entry.clearTextHex);
            handlesBytes32Hex.push(decryptionRequestEvent.handlesBytes32Hex[i]);
        }
        const extraDataV0 = ethers_1.ethers.solidityPacked(["uint8"], [0]);
        const { calldata } = await (0, KMSVerifier_js_1.computeDecryptionCallbackSignaturesAndCalldata)(handlesBytes32Hex, clearTextsHex, extraDataV0, decryptionRequestEvent.requestID, decryptionRequestEvent.callbackSelectorBytes4Hex, ethers_1.ethers.AbiCoder.defaultAbiCoder(), __classPrivateFieldGet(this, _DecryptionOracleEventsHandler_kmsVerifier, "f"), __classPrivateFieldGet(this, _DecryptionOracleEventsHandler_kmsSigners, "f"));
        const txData = {
            to: decryptionRequestEvent.contractCallerAddress,
            data: calldata,
        };
        const tx = await __classPrivateFieldGet(this, _DecryptionOracleEventsHandler_relayerSigner, "f").sendTransaction(txData);
        const receipt = await tx.wait();
        return { tx, receipt };
    }
}
exports.DecryptionOracleEventsHandler = DecryptionOracleEventsHandler;
_DecryptionOracleEventsHandler_db = new WeakMap(), _DecryptionOracleEventsHandler_kmsVerifier = new WeakMap(), _DecryptionOracleEventsHandler_kmsSigners = new WeakMap(), _DecryptionOracleEventsHandler_relayerSigner = new WeakMap();
//# sourceMappingURL=DecryptionOracleEventsHandler.js.map