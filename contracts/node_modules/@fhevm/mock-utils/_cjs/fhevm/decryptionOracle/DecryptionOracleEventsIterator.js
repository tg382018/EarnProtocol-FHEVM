"use strict";
var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _DecryptionOracleEventsIterator_cursor, _DecryptionOracleEventsIterator_decryptionOracleContractInterface, _DecryptionOracleEventsIterator_decryptionOracleContractAddress, _DecryptionOracleEventsIterator_readonlyProvider;
Object.defineProperty(exports, "__esModule", { value: true });
exports.DecryptionOracleEventsIterator = void 0;
const event_js_1 = require("../../ethers/event.js");
const error_js_1 = require("../../utils/error.js");
const utils_js_1 = require("./utils.js");
class DecryptionOracleEventsIterator {
    constructor(decryptionOracleContractInterface, decryptionOracleContractAddress, readonlyProvider, fromBlockNumber) {
        _DecryptionOracleEventsIterator_cursor.set(this, void 0);
        _DecryptionOracleEventsIterator_decryptionOracleContractInterface.set(this, void 0);
        _DecryptionOracleEventsIterator_decryptionOracleContractAddress.set(this, void 0);
        _DecryptionOracleEventsIterator_readonlyProvider.set(this, void 0);
        __classPrivateFieldSet(this, _DecryptionOracleEventsIterator_decryptionOracleContractInterface, decryptionOracleContractInterface, "f");
        __classPrivateFieldSet(this, _DecryptionOracleEventsIterator_decryptionOracleContractAddress, decryptionOracleContractAddress, "f");
        __classPrivateFieldSet(this, _DecryptionOracleEventsIterator_readonlyProvider, readonlyProvider, "f");
        __classPrivateFieldSet(this, _DecryptionOracleEventsIterator_cursor, new event_js_1.BlockLogCursor(fromBlockNumber), "f");
    }
    async next() {
        let evmHasReverted = false;
        const currentBlockNumber = await __classPrivateFieldGet(this, _DecryptionOracleEventsIterator_readonlyProvider, "f").getBlockNumber();
        if (currentBlockNumber <= __classPrivateFieldGet(this, _DecryptionOracleEventsIterator_cursor, "f").blockNumber) {
            evmHasReverted = true;
            __classPrivateFieldGet(this, _DecryptionOracleEventsIterator_cursor, "f").update(currentBlockNumber - 1, 0);
        }
        const { events, cursor } = await (0, utils_js_1.getDecryptionOracleEvents)(__classPrivateFieldGet(this, _DecryptionOracleEventsIterator_decryptionOracleContractInterface, "f"), __classPrivateFieldGet(this, _DecryptionOracleEventsIterator_decryptionOracleContractAddress, "f"), __classPrivateFieldGet(this, _DecryptionOracleEventsIterator_readonlyProvider, "f"), {
            fromBlockNumber: __classPrivateFieldGet(this, _DecryptionOracleEventsIterator_cursor, "f").nextBlockNumber,
            toBlockNumber: currentBlockNumber,
        });
        if (!cursor.isEmpty) {
            __classPrivateFieldGet(this, _DecryptionOracleEventsIterator_cursor, "f").updateForward(cursor.blockNumber, cursor.blockLogIndex);
        }
        else {
            (0, error_js_1.assertFhevm)(events.length === 0);
        }
        return { events, evmHasReverted, currentBlockNumber };
    }
}
exports.DecryptionOracleEventsIterator = DecryptionOracleEventsIterator;
_DecryptionOracleEventsIterator_cursor = new WeakMap(), _DecryptionOracleEventsIterator_decryptionOracleContractInterface = new WeakMap(), _DecryptionOracleEventsIterator_decryptionOracleContractAddress = new WeakMap(), _DecryptionOracleEventsIterator_readonlyProvider = new WeakMap();
//# sourceMappingURL=DecryptionOracleEventsIterator.js.map