"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.assertIsRelayerV1InputProofPayload = assertIsRelayerV1InputProofPayload;
exports.assertIsRelayerV1InputProofResponse = assertIsRelayerV1InputProofResponse;
exports.assertIsRelayerV1PublicDecryptPayload = assertIsRelayerV1PublicDecryptPayload;
exports.assertIsRelayerV1PublicDecryptResponse = assertIsRelayerV1PublicDecryptResponse;
exports.assertIsRelayerV1UserDecryptResponse = assertIsRelayerV1UserDecryptResponse;
exports.assertIsRelayerV1UserDecryptPayload = assertIsRelayerV1UserDecryptPayload;
exports.assertIsRelayerMetadata = assertIsRelayerMetadata;
const address_js_1 = require("../../utils/address.js");
const error_js_1 = require("../../utils/error.js");
const string_js_1 = require("../../utils/string.js");
function _assertIsRelayerV1UserDecryptValidity(value) {
    const stringFields = ["durationDays", "startTimestamp"];
    (0, string_js_1.assertIsStringProperty)(value, stringFields, "RelayerV1UserDecryptValidity");
}
function assertIsRelayerV1InputProofPayload(value) {
    const stringFields = [
        "contractAddress",
        "userAddress",
        "ciphertextWithInputVerification",
        "contractChainId",
        "extraData",
    ];
    (0, string_js_1.assertIsStringProperty)(value, stringFields, "RelayerV1InputProofPayload");
}
function assertIsRelayerV1InputProofResponse(value) {
    const keys = ["handles", "signatures"];
    (0, string_js_1.assertIsStringArrayProperty)(value, keys, "RelayerV1InputProofResponse");
}
function assertIsRelayerV1PublicDecryptPayload(value) {
    const arrayKeys = ["ciphertextHandles"];
    const stringKeys = ["extraData"];
    (0, string_js_1.assertIsStringArrayProperty)(value, arrayKeys, "RelayerV1PublicDecryptPayload");
    (0, string_js_1.assertIsStringProperty)(value, stringKeys, "RelayerV1PublicDecryptResponse");
}
function assertIsRelayerV1PublicDecryptResponse(value) {
    const arrayKeys = ["signatures"];
    const stringKeys = ["decrypted_value"];
    (0, string_js_1.assertIsStringArrayProperty)(value, arrayKeys, "RelayerV1PublicDecryptResponse");
    (0, string_js_1.assertIsStringProperty)(value, stringKeys, "RelayerV1PublicDecryptResponse");
}
function assertIsRelayerV1UserDecryptResponse(value) {
    const stringKeys = ["signature"];
    const objectKeys = ["payload"];
    (0, string_js_1.assertIsStringProperty)(value, stringKeys, "RelayerV1UserDecryptResponse");
    (0, error_js_1.assertIsObjectProperty)(value, objectKeys, "RelayerV1UserDecryptResponse");
    (0, string_js_1.assertIsStringArrayProperty)(value.payload, ["decrypted_values"], "RelayerV1UserDecryptResponse");
}
function assertIsRelayerV1UserDecryptPayload(value) {
    const arrayKeys = ["handleContractPairs", "contractAddresses"];
    const stringKeys = [
        "contractsChainId",
        "publicKey",
        "signature",
        "userAddress",
        "extraData",
    ];
    const objectKeys = ["requestValidity"];
    (0, string_js_1.assertIsStringProperty)(value, stringKeys, "RelayerV1UserDecryptPayload");
    (0, error_js_1.assertIsArrayProperty)(value, arrayKeys, "RelayerV1UserDecryptPayload");
    (0, error_js_1.assertIsObjectProperty)(value, objectKeys, "RelayerV1UserDecryptPayload");
    _assertIsRelayerV1UserDecryptValidity(value.requestValidity);
}
function assertIsRelayerMetadata(value) {
    const stringKeys = ["version"];
    (0, string_js_1.assertIsStringProperty)(value, stringKeys, "RelayerMetadata");
    const keys = [
        "ACLAddress",
        "CoprocessorAddress",
        "InputVerifierAddress",
        "KMSVerifierAddress",
        "relayerSignerAddress",
    ];
    (0, address_js_1.assertIsAddressProperty)(value, keys, "RelayerMetadata");
}
//# sourceMappingURL=payloads.js.map