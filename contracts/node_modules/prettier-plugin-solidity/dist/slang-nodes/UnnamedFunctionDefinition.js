import { NonterminalKind } from '@nomicfoundation/slang/cst';
import { printFunction } from '../slang-printers/print-function.js';
import { getNodeMetadata, updateMetadata } from '../slang-utils/metadata.js';
import { ParametersDeclaration } from './ParametersDeclaration.js';
import { UnnamedFunctionAttributes } from './UnnamedFunctionAttributes.js';
import { FunctionBody } from './FunctionBody.js';
export class UnnamedFunctionDefinition {
    constructor(ast, options) {
        this.kind = NonterminalKind.UnnamedFunctionDefinition;
        let metadata = getNodeMetadata(ast);
        this.parameters = new ParametersDeclaration(ast.parameters, options);
        this.attributes = new UnnamedFunctionAttributes(ast.attributes, options);
        this.body = new FunctionBody(ast.body, options);
        metadata = updateMetadata(metadata, [
            this.parameters,
            this.attributes,
            this.body
        ]);
        this.comments = metadata.comments;
        this.loc = metadata.loc;
        this.cleanModifierInvocationArguments();
    }
    cleanModifierInvocationArguments() {
        for (const { variant: attribute } of this.attributes.items) {
            if (typeof attribute !== 'string') {
                attribute.cleanModifierInvocationArguments();
            }
        }
    }
    print(path, print) {
        return printFunction('function', this, path, print);
    }
}
//# sourceMappingURL=UnnamedFunctionDefinition.js.map